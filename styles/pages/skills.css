@media screen and (min-width: 991px) {
  /* used grid display for desktop screens, thought it to be accessable and a nice aethetic */
  header {
    display: grid;
    grid-template-columns: 30% 70%;
    grid-template-rows: 33% 33% 33%;
    grid-gap: 0;
    min-width: 100vw;
  }
  /* graphical component, navigation links */
  #nav-items {
    margin-bottom: 10px;
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 2;
    font-size: 25px;
    padding: 5px;
    padding-right: 10px;
    padding-left: 10px;
    background-color: #757270;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    justify-content: space-around;
    align-items: end;
    /* text component, heading */
  }
  #nav-items a {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-weight: bold;
    text-decoration: none;
    color: #eab44b;
  }
  #nav-items a:hover {
    filter: brightness(75%);
  }
  h1 {
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 2;
    grid-row-end: 4;
    text-align: center;
    max-width: 95%;
    font-size: 60px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: #eab44b;
  }
  /* graphical component, site logo (acts as link to homepage)*/
  .logo-name {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 4;
    justify-content: center;
    z-index: 2;
  }
  .logo-name img:hover {
    filter: brightness(75%);
  }
  .background-box {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 2;
    background-color: #757270;
    margin-bottom: 10px;
    z-index: 1;
  }
}
@media screen and (max-width: 991px) {
  /* switched to a flex display for smaller screens, the buttons are more appealing for tablets and smartphones and they're easy to see */
  header {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    /* text component, heading */
    /* text component, nav links */
    /* graphical component, site logo (link to homepage) */
  }
  header h1 {
    font-size: 50px;
    max-width: 93%;
    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: #eab44b;
    margin-top: 3px;
  }
  header .button {
    display: block;
    margin: 7px 0;
    padding: 10px;
    background-color: #eab44b;
    border-radius: 10px;
    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-weight: bold;
    text-decoration: none;
    color: #383636;
    width: 200px;
  }
  header .button:active {
    filter: brightness(75%);
  }
  header img {
    width: 290px;
  }
}
/* made minor adjustment to button and logo size to fit smartphones better */
@media screen and (max-width: 650px) {
  header {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    text-align: center;
    /* text component */
    /* graphical component */
    /* text component */
  }
  header h1 {
    font-size: 30px;
  }
  header img {
    width: 60%;
  }
  header .button {
    width: 80%;
  }
  header .button:active {
    filter: brightness(75%);
  }
}
/* I used a flex display to set my body dimensions and keep the footer section at the bottom of screens */
@media screen and (min-width: 991px) {
  body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    margin: 0;
  }
  main {
    flex: 1;
  }
  /* I used a grid display for larger screens so I could place social links and contaxct details side by side and have better control over their exact placement. */
  footer {
    width: 100%;
    bottom: 0;
    display: grid;
    grid-template-columns: 5% 45% 45%;
    grid-template-rows: 20% 20% 20% 20% 20%;
    background-color: #383636;
    grid-gap: 0;
    border: 0;
    margin-top: 25px;
    position: relative;
    margin-top: auto;
  }
  /* graphical component, social media links */
  .social-media {
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 3;
    grid-row-end: 4;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    margin-bottom: 0;
  }
  .social-media a {
    grid-column: 2/span 3;
  }
  .social-media a i {
    color: #eab44b;
    font-size: 35px;
  }
  .social-media a i:hover {
    filter: brightness(75%);
  }
  /* text component, contact information */
  .info {
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row-start: 2;
    grid-row-end: 3;
    display: grid;
    align-self: start;
    margin-bottom: 20px;
  }
  .info p {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: #eab44b;
    text-align: center;
    font-size: 20px;
  }
}
@media screen and (max-width: 991px) {
  footer {
    width: 100%;
    /*graphical component, social media links */
    /* for smaller screens I used a flex display for the footer, I thought itd be more clear to just have social links positioned above contact details */
    /*text component, contact information*/
  }
  footer .social-media {
    display: flex;
    justify-content: space-around;
    margin-bottom: 20px;
    margin-left: auto;
    margin-right: auto;
  }
  footer .social-media a i {
    color: #eab44b;
    font-size: 45px;
  }
  footer .info p {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: #eab44b;
    text-align: center;
  }
}
@media screen and (max-width: 650px) {
  /* I decided to make some slight differences in icon and text sizes for improved visability when swithing between tablet and smartphone sizes */
  footer {
    /*graphical component, social media (not sure if we're meant to note all these tbh just putting in to be sure) */
  }
  footer .social-media a i {
    font-size: 30px;
  }
  /* text component, contact info */
  .info p {
    font-size: 80%;
  }
}
body {
  margin: 0;
  background-color: #383636;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/*graphical element, scroll bar */
::-webkit-scrollbar {
  height: 1rem;
  width: 0.7rem;
}

::-webkit-scrollbar-thumb {
  background-color: #8c8c8c;
  border-radius: 6px;
  border-width: 2px;
}

::-webkit-scrollbar-track {
  background-color: #383636;
}

@media screen and (min-width: 991px) {
  main {
    display: grid;
    grid-template-columns: 30% 70%;
    grid-template-rows: repeat(4, 25%);
    /* text component, used css grid to position text underneath my heading to the right side of the display then adjusted font and colour */
  }
  main .home-text {
    grid-column: 2;
    grid-row: 1;
    margin-bottom: 300px;
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
  }
}
@media screen and (max-width: 991px) {
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    margin-bottom: 40px;
    /* text component, text */
  }
  main .home-text {
    text-align: center;
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    margin-bottom: 40px;
    word-wrap: break-word;
    max-width: 75%;
  }
}
@media screen and (max-width: 650px) {
  .home-text {
    font-size: 80%;
  }
}
/*graphical element, scroll bar size adjusted using 'scrollbar', then rounded using 'thumb, then the background is coloured using 'track*/
::-webkit-scrollbar {
  height: 1rem;
  width: 0.7rem;
}

::-webkit-scrollbar-thumb {
  background-color: #8c8c8c;
  border-radius: 6px;
  border-width: 2px;
}

::-webkit-scrollbar-track {
  background-color: #383636;
}

@media screen and (min-width: 991px) {
  /* text component, use css grid to position classes inside of skills-container repeat is used so that I dont need to define the size of my rows */
  .skills-container {
    display: grid;
    grid-template-columns: 30% 70%;
    grid-template-rows: repeat(3, auto);
    background-color: #383636;
  }
  /* used ccs grid to position skils-section then display flex to display its contents vertically with flex direction */
  .skills-section {
    grid-column: 2;
    display: flex;
    flex-direction: column;
    margin-bottom: 20px;
  }
  /*text component, intro text adjusted exact positioning with margin then adjusted color and font */
  .skills-text {
    margin-top: 10px;
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
  }
  h2 {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: #8c8c8c;
  }
  /* text component, skills list dot points, color adjested as well as font and margin */
  li {
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-weight: bold;
    margin-bottom: 3px;
  }
  .additional-text {
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    text-align: center;
    word-wrap: break-word;
    max-width: 70%;
    margin-top: 50px;
    margin-bottom: 20px;
    margin-left: 10%;
  }
  /* text component, used display block to give the content properties a box like structure then adjusted padding, max-width and border/border-radius to make that structure appear as a button in the display. customised font and colors then added '&:hover' function so that the color would darken when the button is hovered over which I adjusted using filter */
  .download-link {
    display: inline-block;
    padding: 10px 20px;
    text-decoration: none;
    max-width: 30%;
    text-align: center;
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-weight: bold;
    background-color: #8c8c8c;
    border: 3px solid #333;
    border-radius: 6px;
    margin-left: 27%;
    transition: background-color 0.3s;
  }
  .download-link:hover {
    filter: brightness(75%);
  }
}
@media screen and (max-width: 991px) {
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    margin-bottom: 40px;
    /* text component, used display flex for smaller breakpoints and adjusted flex direction to display items vertically, align items to center everything, skills section houses all the text contents. used text align to center text on the display */
    /* text component, skills list uses margin-bottom to create gaps between each of the dot points adjusted font and color as well. used margin-left to further adjust positioning of additional-text (not sure why I only thought to use percentage values for margin in this section i must've been wanting to try a different value and then just forgot about it later on) */
    /* text component, link to resume uses inline blick display, max-width, padding and border to create shape, then all the rest to adjust the colors and text font/weight on the display */
  }
  main .skills-section {
    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    max-width: 90%;
  }
  main .skills-section h2 {
    color: #8c8c8c;
  }
  main .skills-section .skills-text {
    color: #eab44b;
  }
  main li {
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    margin-bottom: 10px;
  }
  main .additional-text {
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    text-align: center;
    max-width: 90%;
    margin-top: 50px;
    margin-bottom: 20px;
    margin-left: 9%;
  }
  main .download-link {
    display: inline-block;
    padding: 10px 20px;
    text-decoration: none;
    max-width: 30%;
    text-align: center;
    color: #eab44b;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-weight: bold;
    background-color: #8c8c8c;
    border: 3px solid #333;
    border-radius: 6px;
    margin-left: 1%;
    transition: background-color 0.3s;
  }
  main .download-link:hover {
    filter: brightness(75%);
  }
}
@media screen and (max-width: 650px) {
  /* text component, adjusted the min width on the download link so the text would always display neatly, then adjusted font sizes for all text on smaller displays */
  .download-link {
    min-width: 100px;
  }
  .skills-text {
    font-size: 80%;
  }
  li {
    font-size: 85%;
  }
  .additional-text {
    font-size: 80%;
  }
}/*# sourceMappingURL=skills.css.map */